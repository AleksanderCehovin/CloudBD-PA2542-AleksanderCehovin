#IP for emulated local Redis server
REDIS_IP="172.28.128.99"

Vagrant.configure(2) do |config|
	config.vm.box = "bento/ubuntu-18.04"
	config.vm.network "private_network", type: "dhcp"
	config.vm.synced_folder "./hosts", "/etc/hostInfo", create: true
	
	config.vm.provision "shell", inline: <<-SHELL
		wget https://apt.puppetlabs.com/puppet5-release-$(lsb_release -cs).deb
		dpkg -i puppet5-release-$(lsb_release -cs).deb
		apt-get -qq update
		apt-get install -y puppet-agent
	SHELL

	config.vm.provision :puppet do |puppet|
		puppet.manifests_path = "environments/test/manifests"
		puppet.manifest_file = "default.pp"
		puppet.module_path = "environments/test/modules"
		puppet.facter = {
			"redis_static_ip" => REDIS_IP,
		}
	end
	
	#Emulate local Redis server, which also works as proxy server.
	config.vm.define "redis" do |redis|
		redis.vm.hostname='redis'	
		redis.vm.network "private_network", ip: REDIS_IP
		redis.trigger.after :up do |trigger|
			trigger.warn = "Redis/Proxy-server is up!"
			trigger.run_remote = {inline: "facter ipaddress_eth1 > /vagrant/hosts/proxy_dynamic_ip.conf"}			
		end
	end		

	config.vm.define "appserver" do |appserver|
		appserver.vm.hostname='appserver'
		appserver.trigger.after :up do |trigger|
			trigger.warn = "Appserver is up!"
			trigger.run_remote = {inline: "facter ipaddress_eth1 > /vagrant/hosts/appserver_dynamic_ip.conf"}
		end		
	end

	config.vm.define "web" do |web|
		web.vm.hostname='web'	
		web.vm.network "forwarded_port", guest: 80, host: 8080
		web.trigger.after :up do |trigger|
			trigger.warn = "Webserver is up!"
			trigger.run_remote = {inline: "facter ipaddress_eth1 > /vagrant/hosts/webserver_dynamic_ip.conf"}
		end		
	end	
	
	config.vm.define "dbserver" do |dbserver|
		dbserver.vm.hostname='dbserver'	
		dbserver.trigger.after :up do |trigger|
			trigger.warn = "DBserver is up!"
			trigger.run_remote = {inline: "facter ipaddress_eth1 > /vagrant/hosts/dbserver_dynamic_ip.conf"}
		end				
	end
		
	(1..3).each do |i|
		config.vm.define "tst-#{i}" do |node|
		end
	end	

end